/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type CatenaXPolicySchema = CatenaXPolicy;
export type CatenaXPolicy = PolicyClass & (AccessPolicy | UsagePolicy);
export type Permission = Rule;
export type Constraint = LogicalConstraint | AtomicConstraint;
export type LogicalConstraint = {
  and?: Constraint[];
  andSequence?: Constraint[];
  or?: Constraint[];
  xone?: Constraint[];
  [k: string]: unknown;
} & (
  | {
      [k: string]: unknown;
    }
  | {
      [k: string]: unknown;
    }
  | {
      [k: string]: unknown;
    }
  | {
      [k: string]: unknown;
    }
);
export type Prohibition = Rule;
export type Duty = {
  action: string;
  constraint?: Constraint[];
  [k: string]: unknown;
};
export type UsagePolicy = {
  [k: string]: unknown;
};

export interface PolicyClass {
  '@id': string;
  profile?: string[] | string;
  /**
   * @minItems 1
   */
  permission?: [Permission, ...Permission[]];
  /**
   * @minItems 1
   */
  prohibition?: [Prohibition, ...Prohibition[]];
  /**
   * @minItems 1
   */
  obligation?: [Duty, ...Duty[]];
  [k: string]: unknown;
}
export interface Rule {
  action: string;
  constraint?: Constraint[];
  [k: string]: unknown;
}
export interface AtomicConstraint {
  rightOperand:
    | string
    | {
        [k: string]: unknown;
      }
    | unknown[];
  leftOperand: string;
  operator:
    | 'eq'
    | 'gt'
    | 'gteq'
    | 'lteq'
    | 'hasPart'
    | 'isA'
    | 'isAllOf'
    | 'isAnyOf'
    | 'isNoneOf'
    | 'isPartOf'
    | 'lt'
    | 'term-lteq'
    | 'neq';
  [k: string]: unknown;
}
export interface AccessPolicy {
  [k: string]: unknown;
}
